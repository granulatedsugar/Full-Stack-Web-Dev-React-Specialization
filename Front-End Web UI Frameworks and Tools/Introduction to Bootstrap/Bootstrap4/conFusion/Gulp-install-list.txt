npm install -g gulp-cli
npm install gulp --save-dev
npm install gulp-sass  browser-sync --save-dev
npm install del@3.0.0 --save-dev
npm install gulp-imagemin@4.1.0 --save-dev
npm install gulp-uglify gulp-usemin gulp-rev gulp-clean-css gulp-flatmap gulp-htmlmin --save-dev

Run `gulp build` after setup

NOTE: 
-Make sure node js is compatible or else gulp-sass wont install
-Make sure you have popper.js installed

Create Guntfile.js with the code below:

--------------------------------------------------------
'use strict';

var gulp = require('gulp'),
    sass = require('gulp-sass'),
    browserSync = require('browser-sync'),
    del = require('del'),
    imagemin = require('gulp-imagemin'),
    uglify = require('gulp-uglify'),
    usemin = require('gulp-usemin'),
    rev = require('gulp-rev'),
    cleanCss = require('gulp-clean-css'),
    flatmap = require('gulp-flatmap'),
    htmlmin = require('gulp-htmlmin');

gulp.task('sass', function() {
    return gulp.src('./css/*.scss')
    .pipe(sass().on('error',sass.logError))
    .pipe(gulp.dest('./css'));
});

gulp.task('sass:watch', function(){
    gulp.watch('./css/*.scss', gulp.series('sass'));
});

gulp.task('browser-sync', function() {
    var files = [
        './*.html',
        './css/*.css',
        './js/*.js',
        './img/*.{png,jpg,gif}'
    ];

    browserSync.init(files, {
        server: {
            baseDir: './'
        }
    });
});

// Default task
gulp.task('default', gulp.parallel('browser-sync', 'sass:watch'));

// Clean task
gulp.task('clean', function() {
    return del(['dist']);
});

// Copy fonts
gulp.task('copyfonts', function() {
    gulp.src('./node_modules/font-awesome/fonts/**/*.{ttf,woff,eof,svg}*')
    .pipe(gulp.dest('./dist/fonts'));
});

// Imagemin
gulp.task('imagemin', function() {
    return gulp.src('img/*.{png,jpg,gif}')
    .pipe(imagemin({ optimizationLevel: 3, progressive: true, interlaced: true}))
    .pipe(gulp.dest('dist/img'));
});

gulp.task('usemin', function() {
    return gulp.src('./*.html')
    .pipe(flatmap(function(stream, file){
        return stream
          .pipe(usemin({
              css: [ rev() ],
              html: [ function() { return htmlmin({ collapseWhitespace: true })} ],
              js: [ uglify(), rev() ],
              inlinejs: [ uglify() ],
              inlinecss: [ cleanCss(), 'concat' ]
          }))
      }))
      .pipe(gulp.dest('dist/'));
  });
  

// Build task (Clean first)
gulp.task('build', gulp.series('clean', gulp.parallel('default', 'copyfonts', 'imagemin', 'usemin'), function() {
    // default task code here 
    gulp.start('copyfonts', 'imagemin', 'usemin');
}));
-------------------------------------------------------------------